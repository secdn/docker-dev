version: '3'
services:
  mysql:
    image: 'mysql/mysql-server:5.7.16'
    restart: always
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456 #root管理员用户密码
      MYSQL_USER: test   #创建test用户
      MYSQL_PASSWORD: test  #设置test用户的密码
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/config/my.cnf:/etc/my.cnf
      - ./mysql/init:/docker-entrypoint-initdb.d/
    ports:
      - '3306:3306'
  redis:
    image: redis:5.0.3
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./redis/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
  rabbitmq:
    image: rabbitmq:3.7.12-management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=123456
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
  mongo:
    image: mongo:4.0.6
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    ports:
      - 27017:27017
    volumes: 
      - ./mongo/data:/data/db
  postgresql:
    image: postgres:11.2
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_DB: secdn
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
    ports:
        - 4352:5432
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
  python:
    build: ./python
    container_name: python
    ports:
        - 25:25
    volumes:
      - ./python/app:/app